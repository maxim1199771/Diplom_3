{"name": "Выход из аккаунта", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchDriverException: Message: Unable to obtain driver for firefox using Selenium Manager.; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location", "trace": "args = ['C:\\\\Users\\\\ааа\\\\PycharmProjects\\\\pythonProject5\\\\.venv\\\\Lib\\\\site-packages\\\\selenium\\\\webdriver\\\\common\\\\windows\\\\selenium-manager.exe', '--browser', 'firefox', '--language-binding', 'python', '--output', ...]\n\n    @staticmethod\n    def run(args: List[str]) -> dict:\n        \"\"\"Executes the Selenium Manager Binary.\n    \n        :Args:\n         - args: the components of the command being executed.\n        :Returns: The log string containing the driver location.\n        \"\"\"\n        if logger.getEffectiveLevel() == logging.DEBUG:\n            args.append(\"--debug\")\n        args.append(\"--language-binding\")\n        args.append(\"python\")\n        args.append(\"--output\")\n        args.append(\"json\")\n    \n        command = \" \".join(args)\n        logger.debug(\"Executing process: %s\", command)\n        try:\n            if sys.platform == \"win32\":\n                completed_proc = subprocess.run(args, capture_output=True, creationflags=subprocess.CREATE_NO_WINDOW)\n            else:\n                completed_proc = subprocess.run(args, capture_output=True)\n            stdout = completed_proc.stdout.decode(\"utf-8\").rstrip(\"\\n\")\n            stderr = completed_proc.stderr.decode(\"utf-8\").rstrip(\"\\n\")\n>           output = json.loads(stdout)\n\n..\\..\\pythonProject5\\.venv\\Lib\\site-packages\\selenium\\webdriver\\common\\selenium_manager.py:142: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\json\\__init__.py:346: in loads\n    return _default_decoder.decode(s)\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\json\\decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <json.decoder.JSONDecoder object at 0x0000020226443110>, s = '', idx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\json\\decoder.py:355: JSONDecodeError\n\nThe above exception was the direct cause of the following exception:\n\nservice = <selenium.webdriver.firefox.service.Service object at 0x00000202294310A0>, options = <selenium.webdriver.firefox.options.Options object at 0x0000020229809B20>\n\n    @staticmethod\n    def get_path(service: Service, options: BaseOptions) -> str:\n        path = service.path\n        try:\n>           path = SeleniumManager().driver_location(options) if path is None else path\n\n..\\..\\pythonProject5\\.venv\\Lib\\site-packages\\selenium\\webdriver\\common\\driver_finder.py:38: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\pythonProject5\\.venv\\Lib\\site-packages\\selenium\\webdriver\\common\\selenium_manager.py:106: in driver_location\n    output = self.run(args)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nargs = ['C:\\\\Users\\\\ааа\\\\PycharmProjects\\\\pythonProject5\\\\.venv\\\\Lib\\\\site-packages\\\\selenium\\\\webdriver\\\\common\\\\windows\\\\selenium-manager.exe', '--browser', 'firefox', '--language-binding', 'python', '--output', ...]\n\n    @staticmethod\n    def run(args: List[str]) -> dict:\n        \"\"\"Executes the Selenium Manager Binary.\n    \n        :Args:\n         - args: the components of the command being executed.\n        :Returns: The log string containing the driver location.\n        \"\"\"\n        if logger.getEffectiveLevel() == logging.DEBUG:\n            args.append(\"--debug\")\n        args.append(\"--language-binding\")\n        args.append(\"python\")\n        args.append(\"--output\")\n        args.append(\"json\")\n    \n        command = \" \".join(args)\n        logger.debug(\"Executing process: %s\", command)\n        try:\n            if sys.platform == \"win32\":\n                completed_proc = subprocess.run(args, capture_output=True, creationflags=subprocess.CREATE_NO_WINDOW)\n            else:\n                completed_proc = subprocess.run(args, capture_output=True)\n            stdout = completed_proc.stdout.decode(\"utf-8\").rstrip(\"\\n\")\n            stderr = completed_proc.stderr.decode(\"utf-8\").rstrip(\"\\n\")\n            output = json.loads(stdout)\n            result = output[\"result\"]\n        except Exception as err:\n>           raise WebDriverException(f\"Unsuccessful command executed: {command}\") from err\nE           selenium.common.exceptions.WebDriverException: Message: Unsuccessful command executed: C:\\Users\\ааа\\PycharmProjects\\pythonProject5\\.venv\\Lib\\site-packages\\selenium\\webdriver\\common\\windows\\selenium-manager.exe --browser firefox --language-binding python --output json\n\n..\\..\\pythonProject5\\.venv\\Lib\\site-packages\\selenium\\webdriver\\common\\selenium_manager.py:145: WebDriverException\n\nThe above exception was the direct cause of the following exception:\n\nrequest = <SubRequest 'driver' for <Function test_logout[firefox]>>\n\n    @pytest.fixture(scope=\"function\", params=[\"chrome\", \"firefox\"])\n    def driver(request):\n        if request.param == \"chrome\":\n            web_driver = webdriver.Chrome()\n        elif request.param == \"firefox\":\n>           web_driver = webdriver.Firefox()\n\nconftest.py:17: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\pythonProject5\\.venv\\Lib\\site-packages\\selenium\\webdriver\\firefox\\webdriver.py:59: in __init__\n    self.service.path = DriverFinder.get_path(self.service, options)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nservice = <selenium.webdriver.firefox.service.Service object at 0x00000202294310A0>, options = <selenium.webdriver.firefox.options.Options object at 0x0000020229809B20>\n\n    @staticmethod\n    def get_path(service: Service, options: BaseOptions) -> str:\n        path = service.path\n        try:\n            path = SeleniumManager().driver_location(options) if path is None else path\n        except Exception as err:\n            msg = f\"Unable to obtain driver for {options.capabilities['browserName']} using Selenium Manager.\"\n>           raise NoSuchDriverException(msg) from err\nE           selenium.common.exceptions.NoSuchDriverException: Message: Unable to obtain driver for firefox using Selenium Manager.; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location\n\n..\\..\\pythonProject5\\.venv\\Lib\\site-packages\\selenium\\webdriver\\common\\driver_finder.py:41: NoSuchDriverException"}, "description": "Проверяем выход из аккаунта", "parameters": [{"name": "driver", "value": "'firefox'"}], "start": 1733236578864, "stop": 1733236578864, "uuid": "db380e7e-2a36-4ff8-8a38-15fb54491976", "historyId": "5f936b42b4412507028f818390ffbc85", "testCaseId": "c4e8d5c031826c89992da6af750cafe1", "fullName": "tests.private_office_test.TestPrivateOffice#test_logout", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "private_office_test"}, {"name": "subSuite", "value": "TestPrivateOffice"}, {"name": "host", "value": "LAPTOP-KPF2QR88"}, {"name": "thread", "value": "51448-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.private_office_test"}]}