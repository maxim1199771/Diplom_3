{"name": "Переход по клику на «Личный кабинет»", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchDriverException: Message: Unable to obtain driver for chrome using Selenium Manager.; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location", "trace": "service = <selenium.webdriver.chrome.service.Service object at 0x00000202297BC4A0>, options = <selenium.webdriver.chrome.options.Options object at 0x00000202297BD190>\n\n    @staticmethod\n    def get_path(service: Service, options: BaseOptions) -> str:\n        path = service.path\n        try:\n>           path = SeleniumManager().driver_location(options) if path is None else path\n\n..\\..\\pythonProject5\\.venv\\Lib\\site-packages\\selenium\\webdriver\\common\\driver_finder.py:38: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\pythonProject5\\.venv\\Lib\\site-packages\\selenium\\webdriver\\common\\selenium_manager.py:106: in driver_location\n    output = self.run(args)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nargs = ['C:\\\\Users\\\\ааа\\\\PycharmProjects\\\\pythonProject5\\\\.venv\\\\Lib\\\\site-packages\\\\selenium\\\\webdriver\\\\common\\\\windows\\\\selenium-manager.exe', '--browser', 'chrome', '--language-binding', 'python', '--output', ...]\n\n    @staticmethod\n    def run(args: List[str]) -> dict:\n        \"\"\"Executes the Selenium Manager Binary.\n    \n        :Args:\n         - args: the components of the command being executed.\n        :Returns: The log string containing the driver location.\n        \"\"\"\n        if logger.getEffectiveLevel() == logging.DEBUG:\n            args.append(\"--debug\")\n        args.append(\"--language-binding\")\n        args.append(\"python\")\n        args.append(\"--output\")\n        args.append(\"json\")\n    \n        command = \" \".join(args)\n        logger.debug(\"Executing process: %s\", command)\n        try:\n            if sys.platform == \"win32\":\n                completed_proc = subprocess.run(args, capture_output=True, creationflags=subprocess.CREATE_NO_WINDOW)\n            else:\n                completed_proc = subprocess.run(args, capture_output=True)\n            stdout = completed_proc.stdout.decode(\"utf-8\").rstrip(\"\\n\")\n            stderr = completed_proc.stderr.decode(\"utf-8\").rstrip(\"\\n\")\n            output = json.loads(stdout)\n            result = output[\"result\"]\n        except Exception as err:\n            raise WebDriverException(f\"Unsuccessful command executed: {command}\") from err\n    \n        for item in output[\"logs\"]:\n            if item[\"level\"] == \"WARN\":\n                logger.warning(item[\"message\"])\n            if item[\"level\"] == \"DEBUG\" or item[\"level\"] == \"INFO\":\n                logger.debug(item[\"message\"])\n    \n        if completed_proc.returncode:\n>           raise WebDriverException(f\"Unsuccessful command executed: {command}.\\n{result}{stderr}\")\nE           selenium.common.exceptions.WebDriverException: Message: Unsuccessful command executed: C:\\Users\\ааа\\PycharmProjects\\pythonProject5\\.venv\\Lib\\site-packages\\selenium\\webdriver\\common\\windows\\selenium-manager.exe --browser chrome --language-binding python --output json.\nE           {'code': 69, 'message': 'Driver unavailable: Driver path: ', 'driver_path': '', 'browser_path': ''}\n\n..\\..\\pythonProject5\\.venv\\Lib\\site-packages\\selenium\\webdriver\\common\\selenium_manager.py:154: WebDriverException\n\nThe above exception was the direct cause of the following exception:\n\nrequest = <SubRequest 'driver' for <Function test_tap_on_private_office_button[chrome]>>\n\n    @pytest.fixture(scope=\"function\", params=[\"chrome\", \"firefox\"])\n    def driver(request):\n        if request.param == \"chrome\":\n>           web_driver = webdriver.Chrome()\n\nconftest.py:15: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\pythonProject5\\.venv\\Lib\\site-packages\\selenium\\webdriver\\chrome\\webdriver.py:45: in __init__\n    super().__init__(\n..\\..\\pythonProject5\\.venv\\Lib\\site-packages\\selenium\\webdriver\\chromium\\webdriver.py:49: in __init__\n    self.service.path = DriverFinder.get_path(self.service, options)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nservice = <selenium.webdriver.chrome.service.Service object at 0x00000202297BC4A0>, options = <selenium.webdriver.chrome.options.Options object at 0x00000202297BD190>\n\n    @staticmethod\n    def get_path(service: Service, options: BaseOptions) -> str:\n        path = service.path\n        try:\n            path = SeleniumManager().driver_location(options) if path is None else path\n        except Exception as err:\n            msg = f\"Unable to obtain driver for {options.capabilities['browserName']} using Selenium Manager.\"\n>           raise NoSuchDriverException(msg) from err\nE           selenium.common.exceptions.NoSuchDriverException: Message: Unable to obtain driver for chrome using Selenium Manager.; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location\n\n..\\..\\pythonProject5\\.venv\\Lib\\site-packages\\selenium\\webdriver\\common\\driver_finder.py:41: NoSuchDriverException"}, "description": "Проверяем работу кнопки Личного Кабинета", "attachments": [{"name": "log", "source": "59330e27-29ef-4da0-a29e-240efda5f703-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "driver", "value": "'chrome'"}], "start": 1733236540243, "stop": 1733236540243, "uuid": "7a2f72fa-858a-491a-bdc8-d1be1a195e24", "historyId": "bd3981abfb8a7af76e4e5fc99fe8de57", "testCaseId": "1d3593ff0607aee783a3b8eb79a5aae3", "fullName": "tests.private_office_test.TestPrivateOffice#test_tap_on_private_office_button", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "private_office_test"}, {"name": "subSuite", "value": "TestPrivateOffice"}, {"name": "host", "value": "LAPTOP-KPF2QR88"}, {"name": "thread", "value": "51448-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.private_office_test"}]}